service: ${self:custom.appName}
variablesResolutionMode: 20210326
useDotenv: true

plugins:
  - serverless-single-page-app-plugin
  - serverless-s3-sync
  - serverless-cloudfront-invalidate

provider:
  name: aws
  runtime: nodejs16.x
  stage: ${opt:stage, 'dev'}
  region: eu-west-2
  environment:
    stage: ${sls:stage}

resources:
  Resources:
    WaveFunctionCollapseS3Bucket:
      Type: AWS::S3::Bucket
      Properties:
        AccessControl: PublicRead
        WebsiteConfiguration:
          IndexDocument: index.html
          ErrorDocument: index.html
    WaveFunctionCollapseS3BucketPolicy:
      Type: AWS::S3::BucketPolicy
      Properties:
        Bucket:
          Ref: WaveFunctionCollapseS3Bucket
        PolicyDocument:
          Statement:
            - Sid: PublicReadGetObject
              Effect: Allow
              Principal: "*"
              Action:
                - s3:GetObject
              Resource:
                Fn::Join: [
                  "", [
                    "arn:aws:s3:::",
                    { "Ref": "WaveFunctionCollapseS3Bucket" },
                    "/*"
                  ]
                ]
    WaveFunctionCollapseCloudFrontDistribution:
      Type: AWS::CloudFront::Distribution
      Properties:
        DistributionConfig:
          Origins:
            - DomainName:
                Fn::Join: [
                  "", [
                    { "Ref": "WaveFunctionCollapseS3Bucket" },
                    ".s3.amazonaws.com"
                  ]
                ]
              ## An identifier for the origin which must be unique within the distribution
              Id: ${self:custom.distributionOriginId}
              CustomOriginConfig:
                HTTPPort: 80
                HTTPSPort: 443
                OriginProtocolPolicy: https-only
          Enabled: 'true'
          DefaultRootObject: index.html
          CustomErrorResponses:
            - ErrorCode: 404
              ResponseCode: 200
              ResponsePagePath: /index.html
          DefaultCacheBehavior:
            AllowedMethods:
              - DELETE
              - GET
              - HEAD
              - OPTIONS
              - PATCH
              - POST
              - PUT
            TargetOriginId: ${self:custom.distributionOriginId}
            ForwardedValues:
              QueryString: 'false'
              Cookies:
                Forward: none
            ViewerProtocolPolicy: redirect-to-https

  Outputs:
    WaveFunctionCollapseS3BucketOutput:
      Value:
        'Ref': WaveFunctionCollapseS3Bucket
    WaveFunctionCollapseCloudFrontDistributionDomainOutput:
      Value:
        'Fn::GetAtt': [ WaveFunctionCollapseCloudFrontDistribution, DomainName ]
    WaveFunctionCollapseCloudFrontDistributionIdOutput:
      Value:
        Ref: WaveFunctionCollapseCloudFrontDistribution

custom:
  appName: ${env:APP_NAME, 'wave-function-collapse'}
  distributionOriginId: WaveFunctionCollapse
  s3LocalPath: dist/
  s3Sync:
    - bucketNameKey: WaveFunctionCollapseS3BucketOutput
      localDir: dist # required
  cloudfrontInvalidate:
    - distributionIdKey: WaveFunctionCollapseCloudFrontDistributionIdOutput
      autoInvalidate: true
      items: # one or more paths required
        - "/*"
      stage: ${opt:stage, 'dev'}